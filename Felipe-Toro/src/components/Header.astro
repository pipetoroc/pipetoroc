---
import ThemeToggle from "./ThemeToggle.astro";
---

<header
  class="fixed top-0 flex justify-between items-center w-full mx-auto z-50"
>
  <nav class="w-full top-0 start-0 border-gray-200">
    <div
      class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
    >
      <a href="/#hero" class="flex items-center space-x-3 rtl:space-x-reverse">
        <img
          src="/public/logo-unamed__white.png"
          class="h-8"
          alt="pipetoroc Logo"
        />
        <span
          class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
          >pipetoroc</span
        >
      </a>

      <div class="ml-auto flex items-center space-x-4 md:pr-4">
        <ThemeToggle id="theme" />

        <button
          id="toggle-button"
          data-collapse-toggle="navbar-default"
          type="button"
          class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-primary-color rounded-lg md:hidden hover:bg-secondary-color focus:outline-none focus:ring-2 focus:ring-gray-200 dark:focus:ring-gray-600"
          aria-controls="navbar-default"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            class="w-5 h-5"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 17 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 1h15M1 7h15M1 13h15"></path>
          </svg>
        </button>
      </div>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul
          class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 dark:border-gray-700"
        >
          <li>
            <a
              aria-label="hero"
              href="/#hero"
              class="block py-2 px-3 text-white rounded md:bg-transparent hover:bg-accent-color hover:text-dark-color md:p-0 md:hover:bg-transparent md:hover:text-accent-color"
              aria-current="page">Home</a
            >
          </li>
          <li>
            <a
              aria-label="projects"
              href="/#projects"
              class="block py-2 px-3 text-white rounded md:bg-transparent hover:bg-accent-color hover:text-dark-color md:p-0 md:hover:bg-transparent md:hover:text-accent-color"
              >Projetos</a
            >
          </li>
          <li>
            <a
              aria-label="experience"
              href="/#experience"
              class="block py-2 px-3 text-white rounded md:bg-transparent hover:bg-accent-color hover:text-dark-color md:p-0 md:hover:bg-transparent md:hover:text-accent-color"
              >ExperiÃªncia</a
            >
          </li>
          <li>
            <a
              aria-label="about-me"
              href="/#about-me"
              class="block py-2 px-3 text-white rounded md:bg-transparent hover:bg-accent-color hover:text-dark-color md:p-0 md:hover:bg-transparent md:hover:text-accent-color"
              >Sobre mim</a
            >
          </li>
          <li>
            <a
              aria-label="contact"
              id="contacto"
              href="mailto:miduga@gmail.com"
              class="block py-2 px-3 text-white rounded md:bg-transparent hover:bg-accent-color hover:text-dark-color md:p-0 md:hover:bg-transparent md:hover:text-accent-color"
              >Contato</a
            >
          </li>
        </ul>
      </div>
    </div>
  </nav>
</header>

<script>
  const toggleButton = document.getElementById(
    "toggle-button",
  ) as HTMLButtonElement;

  if (toggleButton) {
    toggleButton.addEventListener("click", () => {
      const menu = document.getElementById(
        "navbar-default",
      ) as HTMLElement | null;
      menu?.classList.toggle("hidden");
    });
  }

  window.addEventListener("popstate", function () {
    const menu = document.getElementById("navbar-default");
    if (!menu?.classList.contains("hidden")) {
      menu?.classList.add("hidden");
    }
  });

  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav  a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") === entry.target.id) {
              console.log(item.getAttribute("aria-label"));

              item.classList.remove("text-white");
              item.classList.add("text-accent-color");
            } else {
              item.classList.remove("text-accent-color");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "-100px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>
